version: "3.7"
services:
  caddy:
    container_name: caddy
    image: docker.io/library/caddy:2.10.0-alpine
    restart: unless-stopped
    ports:
      - "0.0.0.0:443:443"      
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data:rw
      - caddy-config:/config:rw
    networks:
      searxng:
        aliases:
          - "searxng-caddy"
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    security_opt:   # For Podman compatibility
      - label=disable
  redis:
    container_name: redis
    image: docker.io/valkey/valkey:8-alpine
    command: valkey-server --save 30 1 --loglevel warning
    restart: unless-stopped
    networks:
      searxng:
        aliases:
          - "searxng-redis"
    volumes:
      - valkey-data2:/data
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    security_opt:   # For Podman compatibility
      - label=disable
  searxng:
    container_name: searxng
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    networks:
      searxng:
        aliases:
          - "searxng-service"
    # Don't bind to 127.0.0.1, let it bind to all interfaces within the container
    # This allows Caddy to connect to it from another container
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ./searxng:/etc/searxng:rw
    environment:
      - SEARXNG_BASE_URL=https://${SEARXNG_HOSTNAME:-localhost}/  # Changed to http
      - UWSGI_WORKERS=${SEARXNG_UWSGI_WORKERS:-4}
      - UWSGI_THREADS=${SEARXNG_UWSGI_THREADS:-4}
      - REDIS_URL=redis://searxng-redis:6379/0  # Added Redis connection
    depends_on:
      - redis
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    # Modified healthcheck to use wget which is available in the container
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8080/healthz"]
      interval: 1m30s
      timeout: 10s
      start_period: 2m
      retries: 3
    security_opt:   # For Podman compatibility
      - label=disable
networks:
  searxng:
volumes:
  caddy-data:
  caddy-config:
  valkey-data2: